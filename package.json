{
  "name": "vscode-sidebar-terminal",
  "displayName": "Secondary Terminal",
  "description": "A powerful VS Code extension that displays a fully-featured terminal in the sidebar with split support, Alt+Click cursor positioning, and multi-platform compatibility.",
  "version": "0.1.36",
  "publisher": "s-hiraoku",
  "engines": {
    "vscode": "^1.74.0",
    "node": ">=18.0.0"
  },
  "categories": [
    "Other",
    "Debuggers"
  ],
  "keywords": [
    "terminal",
    "sidebar",
    "shell",
    "console",
    "command line",
    "cli",
    "development",
    "productivity",
    "xterm",
    "pty",
    "split terminal",
    "multi-terminal",
    "alt click",
    "cursor positioning",
    "ime support",
    "japanese input",
    "cross platform",
    "node-pty"
  ],
  "icon": "resources/icon.png",
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/s-hiraoku/vscode-sidebar-terminal"
  },
  "bugs": {
    "url": "https://github.com/s-hiraoku/vscode-sidebar-terminal/issues"
  },
  "homepage": "https://github.com/s-hiraoku/vscode-sidebar-terminal#readme",
  "license": "MIT",
  "qna": "https://github.com/s-hiraoku/vscode-sidebar-terminal/discussions",
  "preview": false,
  "main": "./dist/extension.js",
  "activationEvents": [
    "onView:secondaryTerminal"
  ],
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "secondaryTerminalContainer",
          "title": "Secondary Terminal",
          "icon": "$(terminal)"
        }
      ]
    },
    "views": {
      "secondaryTerminalContainer": [
        {
          "id": "secondaryTerminal",
          "name": "Terminal",
          "type": "webview",
          "icon": "$(terminal)",
          "contextualTitle": "Secondary Terminal"
        }
      ]
    },
    "commands": [
      {
        "command": "secondaryTerminal.killTerminal",
        "title": "Kill Terminal",
        "icon": "$(trash)"
      },
      {
        "command": "secondaryTerminal.splitTerminal",
        "title": "Split Terminal",
        "icon": "$(split-vertical)"
      },
      {
        "command": "secondaryTerminal.openSettings",
        "title": "Terminal Settings",
        "icon": "$(settings-gear)"
      },
      {
        "command": "secondaryTerminal.sendToTerminal",
        "title": "Send to Secondary Terminal",
        "category": "Secondary Terminal"
      },
      {
        "command": "secondaryTerminal.sendAtMention",
        "title": "Insert File Reference (Cmd+Option+L)",
        "category": "Secondary Terminal"
      },
      {
        "command": "secondaryTerminal.testCliAgentStatus",
        "title": "Test Claude Status Update",
        "category": "Secondary Terminal"
      },
      {
        "command": "secondaryTerminal.debugSession",
        "title": "Debug Session State",
        "category": "Secondary Terminal"
      },
      {
        "command": "secondaryTerminal.saveSession",
        "title": "Save Terminal Session",
        "category": "Secondary Terminal",
        "icon": "$(save)"
      },
      {
        "command": "secondaryTerminal.restoreSession",
        "title": "Restore Terminal Session",
        "category": "Secondary Terminal",
        "icon": "$(refresh)"
      },
      {
        "command": "secondaryTerminal.clearSession",
        "title": "Clear Terminal Session",
        "category": "Secondary Terminal",
        "icon": "$(clear-all)"
      },
      {
        "command": "secondaryTerminal.activateCopilot",
        "title": "Activate GitHub Copilot Chat",
        "category": "Secondary Terminal"
      },
      {
        "command": "secondaryTerminal.testScrollback",
        "title": "Test Scrollback Feature",
        "category": "Secondary Terminal"
      },
      {
        "command": "secondaryTerminal.clearCorruptedHistory",
        "title": "Clear Corrupted Terminal History",
        "category": "Secondary Terminal",
        "icon": "$(trash)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "secondaryTerminal.splitTerminal",
          "when": "view == secondaryTerminal",
          "group": "navigation@1"
        },
        {
          "command": "secondaryTerminal.killTerminal",
          "when": "view == secondaryTerminal",
          "group": "navigation@3"
        },
        {
          "command": "secondaryTerminal.openSettings",
          "when": "view == secondaryTerminal",
          "group": "navigation@4"
        }
      ]
    },
    "configuration": {
      "title": "Secondary Terminal",
      "properties": {
        "secondaryTerminal.shell": {
          "type": "string",
          "default": "",
          "description": "Path to shell executable. Leave empty to use system default."
        },
        "secondaryTerminal.shellArgs": {
          "type": "array",
          "default": [],
          "description": "Arguments to pass to the shell."
        },
        "secondaryTerminal.maxTerminals": {
          "type": "number",
          "default": 5,
          "description": "Maximum number of terminals allowed."
        },
        "secondaryTerminal.cursorBlink": {
          "type": "boolean",
          "default": true,
          "description": "Enable cursor blinking in terminal."
        },
        "secondaryTerminal.theme": {
          "type": "string",
          "default": "auto",
          "enum": [
            "auto",
            "dark",
            "light"
          ],
          "description": "Terminal theme. Auto follows VS Code theme."
        },
        "secondaryTerminal.defaultDirectory": {
          "type": "string",
          "default": "",
          "description": "Default directory for new terminals. Leave empty to use workspace root."
        },
        "secondaryTerminal.confirmBeforeKill": {
          "type": "boolean",
          "default": false,
          "description": "Show confirmation dialog before closing terminals"
        },
        "secondaryTerminal.protectLastTerminal": {
          "type": "boolean",
          "default": true,
          "description": "Prevent closing the last terminal"
        },
        "secondaryTerminal.minTerminalCount": {
          "type": "number",
          "default": 1,
          "minimum": 0,
          "maximum": 5,
          "description": "Minimum number of terminals to keep open"
        },
        "secondaryTerminal.maxSplitTerminals": {
          "type": "number",
          "default": 5,
          "minimum": 1,
          "maximum": 5,
          "description": "Maximum number of terminals to display in split view"
        },
        "secondaryTerminal.minTerminalHeight": {
          "type": "number",
          "default": 100,
          "minimum": 50,
          "maximum": 200,
          "description": "Minimum height for each terminal in split view (pixels)"
        },
        "secondaryTerminal.enableSplitResize": {
          "type": "boolean",
          "default": true,
          "description": "Allow resizing split terminals by dragging splitters"
        },
        "secondaryTerminal.statusDisplayDuration": {
          "type": "number",
          "default": 3000,
          "minimum": 1000,
          "maximum": 10000,
          "description": "Duration to display status messages (milliseconds)"
        },
        "secondaryTerminal.autoHideStatus": {
          "type": "boolean",
          "default": true,
          "description": "Automatically hide status messages after specified duration"
        },
        "secondaryTerminal.showStatusOnActivity": {
          "type": "boolean",
          "default": true,
          "description": "Show last status message when user performs actions"
        },
        "secondaryTerminal.showWebViewHeader": {
          "type": "boolean",
          "default": true,
          "description": "Show title and command icons in the webview header"
        },
        "secondaryTerminal.webViewTitle": {
          "type": "string",
          "default": "Terminal",
          "description": "Title to display in the webview header"
        },
        "secondaryTerminal.showSampleIcons": {
          "type": "boolean",
          "default": true,
          "description": "Show sample command icons in webview header (display only)"
        },
        "secondaryTerminal.sampleIconOpacity": {
          "type": "number",
          "default": 0.4,
          "minimum": 0.1,
          "maximum": 1,
          "description": "Opacity of sample icons (0.1 to 1.0)"
        },
        "secondaryTerminal.headerFontSize": {
          "type": "number",
          "default": 14,
          "minimum": 10,
          "maximum": 20,
          "description": "Font size for webview header title"
        },
        "secondaryTerminal.headerIconSize": {
          "type": "number",
          "default": 20,
          "minimum": 14,
          "maximum": 28,
          "description": "Size of terminal icon in webview header"
        },
        "secondaryTerminal.sampleIconSize": {
          "type": "number",
          "default": 16,
          "minimum": 12,
          "maximum": 24,
          "description": "Size of sample icons in webview header"
        },
        "secondaryTerminal.altClickMovesCursor": {
          "type": "boolean",
          "default": true,
          "description": "Controls whether Alt/Option + click will reposition the prompt cursor to underneath the mouse. This feature may not work reliably for some shells or programs."
        },
        "secondaryTerminal.enableAtMentionSync": {
          "type": "boolean",
          "default": false,
          "description": "Enable automatic @filename mention when CLI Agent sends to standard terminal"
        },
        "secondaryTerminal.focusAfterAtMention": {
          "type": "boolean",
          "default": true,
          "description": "Focus secondary terminal after sending @filename with CMD+OPT+L"
        },
        "secondaryTerminal.enableCliAgentIntegration": {
          "type": "boolean",
          "default": true,
          "description": "Enable file reference shortcuts: Use Cmd+Option+L (Mac) or Alt+Ctrl+L (Linux/Windows) to insert file references"
        },
        "secondaryTerminal.enableGitHubCopilotIntegration": {
          "type": "boolean",
          "default": true,
          "description": "Enable GitHub Copilot Chat integration: Use Cmd+K Cmd+C (Mac) or Ctrl+K Ctrl+C (Linux/Windows) to activate Copilot Chat"
        },
        "secondaryTerminal.enablePersistentSessions": {
          "type": "boolean",
          "default": true,
          "description": "Enable terminal session persistence: Restore terminal contents and state after VS Code restart"
        },
        "secondaryTerminal.persistentSessionScrollback": {
          "type": "number",
          "default": 100,
          "minimum": 0,
          "maximum": 10000,
          "description": "Number of lines to restore from terminal history (0 to disable scrollback restore)"
        },
        "secondaryTerminal.persistentSessionReviveProcess": {
          "type": "string",
          "default": "onExitAndWindowClose",
          "enum": [
            "never",
            "onExit",
            "onExitAndWindowClose"
          ],
          "enumDescriptions": [
            "Never save terminal sessions",
            "Save sessions when VS Code exits",
            "Save sessions when VS Code exits or window closes"
          ],
          "description": "When to save terminal sessions for restoration"
        },
        "secondaryTerminal.hideOnStartup": {
          "type": "string",
          "default": "never",
          "enum": [
            "never",
            "whenEmpty",
            "always"
          ],
          "enumDescriptions": [
            "Never hide the terminal view on startup",
            "Hide terminal when no sessions are restored",
            "Always hide terminal on startup"
          ],
          "description": "Control terminal visibility on VS Code startup"
        },
        "secondaryTerminal.restoreScrollback": {
          "type": "boolean",
          "default": true,
          "description": "Enable restoration of terminal command history and output (scrollback buffer)"
        },
        "secondaryTerminal.scrollbackLines": {
          "type": "number",
          "default": 1000,
          "minimum": 0,
          "maximum": 10000,
          "description": "Maximum number of lines to restore from terminal history (0 to disable)"
        },
        "secondaryTerminal.scrollbackCompression": {
          "type": "boolean",
          "default": true,
          "description": "Compress scrollback data to reduce storage size"
        },
        "secondaryTerminal.scrollbackProgressiveLoad": {
          "type": "boolean",
          "default": false,
          "description": "Load scrollback data progressively for better performance with large histories"
        },
        "secondaryTerminal.scrollbackMaxStorageSize": {
          "type": "number",
          "default": 10485760,
          "minimum": 1048576,
          "maximum": 104857600,
          "description": "Maximum storage size for scrollback data in bytes (1MB - 100MB)"
        }
      }
    },
    "keybindings": [
      {
        "command": "secondaryTerminal.sendAtMention",
        "key": "ctrl+alt+l",
        "mac": "cmd+alt+l",
        "when": "editorTextFocus"
      },
      {
        "command": "secondaryTerminal.activateCopilot",
        "key": "ctrl+k ctrl+c",
        "mac": "cmd+k cmd+c"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "npm run test:unit",
    "test:coverage": "nyc --reporter=text --reporter=html --reporter=lcov npm run test",
    "test:watch": "npm run watch-tests & npm run test",
    "test:unit": "nyc mocha --require ./src/test/shared/setup-exit-handler.js --require out/test/shared/TestSetup.js --timeout 30000 'out/test/unit/**/*.test.js'",
    "test:integration": "nyc mocha --require ./src/test/shared/setup-exit-handler.js --require out/test/shared/TestSetup.js --timeout 60000 'out/test/integration/**/*.test.js'",
    "test:performance": "nyc mocha --require ./src/test/shared/setup-exit-handler.js --require out/test/shared/TestSetup.js --timeout 120000 'out/test/performance/**/*.test.js'",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:performance",
    "test:refactored": "npm run test:integration && npm run test:performance",
    "coverage:report": "nyc report --reporter=text --reporter=html",
    "coverage:check": "nyc check-coverage --lines 70 --functions 70 --branches 60",
    "format": "prettier --write \"src/**/*.{ts,tsx,js,jsx,json,css,md}\"",
    "vsce:package": "@vscode/vsce package",
    "vsce:publish": "@vscode/vsce publish",
    "vsce:package:win32-x64": "@vscode/vsce package --target win32-x64",
    "vsce:package:win32-arm64": "@vscode/vsce package --target win32-arm64",
    "vsce:package:linux-x64": "@vscode/vsce package --target linux-x64",
    "vsce:package:linux-arm64": "@vscode/vsce package --target linux-arm64",
    "vsce:package:linux-armhf": "@vscode/vsce package --target linux-armhf",
    "vsce:package:darwin-x64": "@vscode/vsce package --target darwin-x64",
    "vsce:package:darwin-arm64": "@vscode/vsce package --target darwin-arm64",
    "vsce:package:alpine-x64": "@vscode/vsce package --target alpine-x64",
    "vsce:package:alpine-arm64": "@vscode/vsce package --target alpine-arm64",
    "create-icons": "node scripts/create-icon.js",
    "pre-release:check": "npm run tdd:comprehensive-check",
    "release:patch": "npm run pre-release:check && npm version patch && git push origin --follow-tags",
    "release:minor": "npm run pre-release:check && npm version minor && git push origin --follow-tags",
    "release:major": "npm run pre-release:check && npm version major && git push origin --follow-tags",
    "tdd:red": "node scripts/tdd-test-runner.js red",
    "tdd:green": "node scripts/tdd-test-runner.js green",
    "tdd:refactor": "node scripts/tdd-test-runner.js refactor",
    "tdd:cycle": "node scripts/tdd-workflow-automation.js",
    "tdd:check-quality": "node scripts/tdd-quality-checker.js",
    "tdd:quality-gate": "node scripts/tdd-quality-gate.js",
    "tdd:comprehensive-check": "npm run test:coverage && npm run tdd:check-quality && npm run tdd:quality-gate",
    "tdd:generate-report": "node scripts/tdd-quality-checker.js --format=markdown"
  },
  "devDependencies": {
    "@istanbuljs/nyc-config-typescript": "^1.0.2",
    "@testing-library/dom": "^10.4.0",
    "@types/chai": "^5.2.2",
    "@types/glob": "^9.0.0",
    "@types/jsdom": "^21.1.7",
    "@types/mocha": "^10.0.6",
    "@types/node": "22.x",
    "@types/sinon": "^17.0.4",
    "@types/sinon-chai": "^4.0.0",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "@vscode/test-electron": "^2.3.8",
    "@vscode/vsce": "^3.6.0",
    "chai": "^4.3.10",
    "css-loader": "^7.1.2",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^10.0.0",
    "eslint-plugin-prettier": "^5.1.2",
    "glob": "^11.0.0",
    "jsdom": "^26.1.0",
    "mocha": "^10.2.0",
    "nyc": "^17.1.0",
    "prettier": "^3.1.1",
    "sinon": "^21.0.0",
    "sinon-chai": "^3.7.0",
    "source-map-support": "^0.5.21",
    "style-loader": "^4.0.0",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.3.3",
    "vsce": "^2.15.0",
    "vscode-test": "^1.6.1",
    "webpack": "^5.89.0",
    "webpack-cli": "^6.0.0"
  },
  "dependencies": {
    "@homebridge/node-pty-prebuilt-multiarch": "^0.13.1",
    "@xterm/addon-serialize": "^0.13.0",
    "@xterm/xterm": "^5.5.0",
    "process": "^0.11.10",
    "xterm": "^5.3.0",
    "xterm-addon-fit": "^0.8.0",
    "xterm-addon-web-links": "^0.9.0"
  },
  "bundledDependencies": [
    "@homebridge/node-pty-prebuilt-multiarch"
  ],
  "bundleDependencies": [
    "@homebridge/node-pty-prebuilt-multiarch"
  ]
}
